{
  "createdAt": "2025-07-03T18:25:15.484Z",
  "updatedAt": "2025-07-15T13:56:05.000Z",
  "id": "Sx5IUoxGRlOqK1Z5",
  "name": "Get Calculations data",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "calculationName"
            }
          ]
        }
      },
      "id": "c055762a-8fe7-4141-a639-df2372f30060",
      "typeVersion": 1.1,
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        0,
        290
      ]
    },
    {
      "parameters": {
        "mode": "load",
        "pineconeIndex": {
          "__rl": true,
          "value": "orbit",
          "mode": "list",
          "cachedResultName": "orbit"
        },
        "prompt": "=Get me information for this calculation {{ $json.calculationName }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        220,
        415
      ],
      "id": "773c2c5a-6937-45cf-a674-2e679bb34483",
      "name": "Get Data from Pinecone Vector Store",
      "alwaysOutputData": true,
      "credentials": {
        "pineconeApi": {
          "id": "XvgTWkynUOjsJJpB",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        160,
        640
      ],
      "id": "8440243c-c66a-4515-ad44-c29f0c6e163c",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "G31quSh7LzWBFqO1",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "95074cf1-b196-4c51-9779-ec7051f30489",
              "leftValue": "={{ $input?.item?.json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        596,
        415
      ],
      "id": "509c669e-17c5-4298-bf29-75e8890a07b2",
      "name": "If"
    },
    {
      "parameters": {
        "url": "=https://spm.varicent.com{{ $json.details }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Model\": \"InnoVyneDEMO\",\n  \"Content-Type\": \"application/json\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1800,
        320
      ],
      "id": "cad7c225-efcb-47ba-bb48-f211bee3e5ef",
      "name": "Get Calculations information",
      "credentials": {
        "httpHeaderAuth": {
          "id": "9nOz8Vb1iWOL2bUm",
          "name": "pr-spm-api-key"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://spm.varicent.com/api/v1/composer/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Model\": \"InnoVyneDEMO\",\n  \"Content-Type\": \"application/json\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        816,
        540
      ],
      "id": "b6bb94cc-b061-483e-919c-e4906bf41575",
      "name": "Get all data from Composer",
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "9nOz8Vb1iWOL2bUm",
          "name": "pr-spm-api-key"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "361fb78c-49f0-46e5-badc-908f60b09d00",
              "leftValue": "={{ $json.type }}",
              "rightValue": "=Calculation",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1036,
        540
      ],
      "id": "5f76e56b-581d-402b-b83d-3eba763ffa13",
      "name": "Filter"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "orbit",
          "mode": "list",
          "cachedResultName": "orbit"
        },
        "options": {
          "pineconeNamespace": "Innovyne"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        1280,
        540
      ],
      "id": "4791d907-9425-4dd8-ab5e-472b890d37b5",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "XvgTWkynUOjsJJpB",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1260,
        820
      ],
      "id": "b9650a11-da3c-41a7-ad68-6f71f783100f",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "G31quSh7LzWBFqO1",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1376,
        812.5
      ],
      "id": "90b47537-8f8c-4312-a53a-a8a9d4e10d68",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1464,
        1010
      ],
      "id": "50bcc602-9084-4549-b4a2-f4baa7b2b7fb",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1140,
        160
      ],
      "id": "886e6bb2-e968-4c86-8599-d92366f70651",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1380,
        160
      ],
      "id": "acc0d779-b904-4606-b6a1-41ae269f12e5",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json.data;\nconst calcToFind = data[0].calculationName\nreturn data.find(obj => calcToFind === obj.name)  \n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        180
      ],
      "id": "8f1f60c6-ecad-41bc-a83a-736ce246eef6",
      "name": "Code"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1660,
        560
      ],
      "id": "dd43b622-b6f8-4fc7-8c02-2e1f5de54a07",
      "name": "No Operation, do nothing"
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get Data from Pinecone Vector Store",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Get Data from Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Get Data from Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Calculations information",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get all data from Composer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all data from Composer": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Get Calculations information": {
      "main": [
        []
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get Calculations information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "calculationName": "Returns"
        }
      }
    ]
  },
  "versionId": "151cc48a-27a7-4635-b51d-e21c7126e507",
  "triggerCount": 0,
  "tags": []
}